// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketParkingAPI.Data;

#nullable disable

namespace TicketParkingAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketParkingAPI.Models.BeneficioLealtad", b =>
                {
                    b.Property<int>("IdBeneficio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBeneficio"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdLealtad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PuntosRequeridos")
                        .HasColumnType("int");

                    b.HasKey("IdBeneficio");

                    b.HasIndex("IdLealtad");

                    b.ToTable("BeneficiosLealtad");

                    b.HasData(
                        new
                        {
                            IdBeneficio = 1,
                            Activo = true,
                            Descripcion = "Lavado completo de vehículo gratis",
                            FechaCreacion = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Lavado Gratis",
                            PuntosRequeridos = 1
                        },
                        new
                        {
                            IdBeneficio = 2,
                            Activo = true,
                            Descripcion = "30 minutos de parqueo gratis",
                            FechaCreacion = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "30 Minutos Gratis",
                            PuntosRequeridos = 2
                        },
                        new
                        {
                            IdBeneficio = 3,
                            Activo = true,
                            Descripcion = "1 hora de parqueo gratis",
                            FechaCreacion = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "1 Hora Gratis",
                            PuntosRequeridos = 3
                        });
                });

            modelBuilder.Entity("TicketParkingAPI.Models.Lealtad", b =>
                {
                    b.Property<int>("IdLealtad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLealtad"));

                    b.Property<double>("HorasAcumuladas")
                        .HasColumnType("float");

                    b.Property<int>("PuntosAcumulados")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("IdLealtad");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Lealtad");
                });

            modelBuilder.Entity("TicketParkingAPI.Models.TicketQuery", b =>
                {
                    b.Property<int>("IdTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTicket"));

                    b.Property<string>("EstadoTicket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("PuntosLealtad")
                        .HasColumnType("int");

                    b.Property<string>("TicketCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TiempoEstadia")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdTicket");

                    b.ToTable("TicketQueries");
                });

            modelBuilder.Entity("TicketParkingAPI.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TicketParkingAPI.Models.BeneficioLealtad", b =>
                {
                    b.HasOne("TicketParkingAPI.Models.Lealtad", "Lealtad")
                        .WithMany()
                        .HasForeignKey("IdLealtad");

                    b.Navigation("Lealtad");
                });

            modelBuilder.Entity("TicketParkingAPI.Models.Lealtad", b =>
                {
                    b.HasOne("TicketParkingAPI.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
